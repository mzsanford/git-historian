#!/usr/bin/env ruby

require 'rubygems'
require 'date'
require 'active_support'

# Options processing
require 'optparse'
require 'ostruct'

class GitHistorian
  def initialize(config)
    @repoistory = config.repository
    @format = config.format
  end

  def commits
    log_data = git_output("git log --first-parent --topo-order")
    commit_data = log_data.split(/\ncommit /m).reverse
    commit_data.map do |blob|
      begin
      {
        :hash => blob.scan(/^([a-z0-9]+)\n/)[0][0],
        :author => blob.scan(/Author:\s+(.*?)\n/)[0][0],
        :date => Date.parse(blob.scan(/Date:\s+(.*?)\n/)[0][0])
      }
      rescue
        nil
      end
    end.compact
  end

  def diff(from_commit, to_commit)
    diff_data = git_output("git diff --shortstat #{from_commit[:hash]}..#{to_commit[:hash]}")
    if diff_data =~ /(\d+) files.* (\d+) insert.* (\d+) delet/
      {
        :files => $1, :inserted => $2, :deleted => $3
      }
    else
      nil
    end
  end

  def formatted_diff(current_commit, diff)
    if @format == :csv
      format_csv(current_commit, diff)
    else
      format_normal(current_commit, diff)
    end
  end

  def format_csv(commit, stats)
    [ commit[:date],
      stats[:files],
      stats[:inserted],
      stats[:deleted]
    ].join(',')
  end

  def format_normal(commit, stats)
    [ commit[:date],
      stats[:files].to_s.rjust(5),
      ascii_green("+#{stats[:inserted]}".rjust(7)),
      ascii_red("-#{stats[:deleted]}".rjust(7))
    ].join(' ')
  end

  def format_output(commit, stats, config)

  end

  protected

  def ascii_green(msg)
    "\e[32m#{msg}\e[0m"
  end

  def ascii_red(msg)
    "\e[31m#{msg}\e[0m"
  end

  def git_output(cmd)
    old_dir = Dir.pwd
    Dir.chdir(@repoistory)
    command_return = `#{cmd}`
    Dir.chdir(old_dir)
    command_return
  end
end

def self.parse_options(args)
  options = OpenStruct.new
  options.repository = "."

  OptionParser.new do |opts|
    opts.banner = "Usage: git-historian [options]"

    opts.on("-r", "--repository REPOSITORY",
           "Location of the local git repository",
           "  (default: current directory)") do |repo|
     options.repository = repo || '.'

     unless File.exist?(options.repository)
       puts "ERROR: Repository must be a directory"
       exit
     end
   end

   opts.on("-f", "--format FORMAT",
          "Output format",
          "(options: csv, normal. default: normal)") do |fmt|
    options.format = :csv if fmt == "csv"
  end

   opts.parse!(args)
  end

  options
end


historian = GitHistorian.new(parse_options(ARGV))

dates_done = Set.new
previous_commit = nil

puts "date, files changed, lines added, lines removed"
historian.commits.each do |commit|
  if commit[:date] == commit[:date].beginning_of_week
    if previous_commit && !dates_done.include?(commit[:date])
      diff = historian.diff(previous_commit, commit)
      puts historian.formatted_diff(commit, diff)
    end
    dates_done << commit[:date]
    previous_commit = commit
  end
end